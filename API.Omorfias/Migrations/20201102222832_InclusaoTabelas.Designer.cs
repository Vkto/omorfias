// <auto-generated />
using System;
using API.Omorfias.Data.Base;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace API.Omorfias.Migrations
{
    [DbContext(typeof(OmorfiasContext))]
    [Migration("20201102222832_InclusaoTabelas")]
    partial class InclusaoTabelas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("API.Omorfias.Data.Models.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AccountType");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<decimal>("Telephone")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Adress");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CardHolder")
                        .HasColumnType("text");

                    b.Property<int>("CardType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Number")
                        .HasColumnType("numeric");

                    b.Property<int>("SecurityCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AdressId")
                        .HasColumnType("integer");

                    b.Property<int>("AverageValue")
                        .HasColumnType("integer");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Cnpj")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Cpf")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Evaluation")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ServiceLocationId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Telephone")
                        .HasColumnType("numeric");

                    b.Property<string>("UrlImage")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdressId");

                    b.HasIndex("ServiceLocationId");

                    b.HasIndex("UserId");

                    b.ToTable("Enterprise");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Favorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("EnterpriseId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Premium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Premium");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Scheduling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CardId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EnterpriseId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceLocation")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("UserId");

                    b.ToTable("Scheduling");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.ServiceLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Home")
                        .HasColumnType("boolean");

                    b.Property<bool>("Store")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ServiceLocation");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CategoryEnum")
                        .HasColumnType("integer");

                    b.Property<int?>("EnterpriseId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AccountTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("CardId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("PremiumId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("CardId");

                    b.HasIndex("PremiumId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Enterprise", b =>
                {
                    b.HasOne("API.Omorfias.Data.Models.Adress", "Adress")
                        .WithMany()
                        .HasForeignKey("AdressId");

                    b.HasOne("API.Omorfias.Data.Models.ServiceLocation", "ServiceLocation")
                        .WithMany()
                        .HasForeignKey("ServiceLocationId");

                    b.HasOne("API.Omorfias.Data.Models.User", null)
                        .WithMany("Enterprises")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Favorites", b =>
                {
                    b.HasOne("API.Omorfias.Data.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId");

                    b.HasOne("API.Omorfias.Data.Models.User", null)
                        .WithMany("Favorites")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Post", b =>
                {
                    b.HasOne("API.Omorfias.Data.Models.User", null)
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Scheduling", b =>
                {
                    b.HasOne("API.Omorfias.Data.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.HasOne("API.Omorfias.Data.Models.Enterprise", null)
                        .WithMany("Scheduling")
                        .HasForeignKey("EnterpriseId");

                    b.HasOne("API.Omorfias.Data.Models.User", null)
                        .WithMany("Schedulings")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.Services", b =>
                {
                    b.HasOne("API.Omorfias.Data.Models.Enterprise", null)
                        .WithMany("Services")
                        .HasForeignKey("EnterpriseId");
                });

            modelBuilder.Entity("API.Omorfias.Data.Models.User", b =>
                {
                    b.HasOne("API.Omorfias.Data.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId");

                    b.HasOne("API.Omorfias.Data.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.HasOne("API.Omorfias.Data.Models.Premium", "Premium")
                        .WithMany()
                        .HasForeignKey("PremiumId");
                });
#pragma warning restore 612, 618
        }
    }
}
